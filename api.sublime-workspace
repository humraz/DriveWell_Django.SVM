{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"HTT",
				"HTTP_400_BAD_REQUEST"
			],
			[
				"HTTP",
				"HTTP_201_CREATED"
			],
			[
				"Snipp",
				"SnippetSerializer"
			],
			[
				"HT",
				"Http404"
			],
			[
				"h",
				"HTTP_201_CREATED"
			],
			[
				"Snip",
				"SnippetSerializer"
			],
			[
				"f",
				"format"
			],
			[
				"s",
				"Snippet"
			],
			[
				"sni",
				"snippet_list"
			],
			[
				"Sign",
				"SignUpAdmin"
			],
			[
				"re",
				"request"
			]
		]
	},
	"buffers":
	[
		{
			"file": "snipetss/models.py",
			"settings":
			{
				"buffer_size": 433,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django.shortcuts import render\n\n# Create your views here.\nfrom rest_framework import status\nfrom django.http import HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\nfrom rest_framework.renderers import JSONRenderer\nfrom rest_framework.parsers import JSONParser\nfrom rest_framework.response import Response\nfrom snipetss.models import Snippet\nfrom rest_framework.decorators import api_view\nfrom snipetss.serializers import SnippetSerializer\nfrom rest_framework.views import APIView\n\nclass SnippetList(APIView):\n    \"\"\"\n    List all snippets, or create a new snippet.\n    \"\"\"\n    def get(self, request, format=None):\n        snippets = Snippet.objects.all()\n        serializer = SnippetSerializer(snippets, many=True)\n        return Response(serializer.data)\n\n    def post(self, request, format=None):\n        serializer = SnippetSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n\n\ndef \n\n\nclass SnippetDetail(APIView):\n    \"\"\"\n    Retrieve, update or delete a snippet instance.\n    \"\"\"\n    def get_object(self, pk):\n        try:\n            return Snippet.objects.get(pk=pk)\n        except Snippet.DoesNotExist:\n            raise Http404\n\n    def get(self, request, pk, format=None):\n        snippet = self.get_object(pk)\n        serializer = SnippetSerializer(snippet)\n        return Response(serializer.data)\n\n    def put(self, request, pk, format=None):\n        snippet = self.get_object(pk)\n        serializer = SnippetSerializer(snippet, data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n    def delete(self, request, pk, format=None):\n        snippet = self.get_object(pk)\n        snippet.delete()\n        return Response(status=status.HTTP_204_NO_CONTENT)",
			"file": "snipetss/views.py",
			"file_size": 2037,
			"file_write_time": 131353239941637542,
			"settings":
			{
				"buffer_size": 2041,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "snipetss/serializers.py",
			"settings":
			{
				"buffer_size": 203,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from rest_framework import serializers"
			}
		},
		{
			"contents": "\"\"\"apii URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/1.10/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.conf.urls import url, include\n    2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\n\"\"\"\nfrom django.conf.urls import url\nfrom django.contrib import admin\nfrom snipetss import views\nfrom rest_framework.urlpatterns import format_suffix_patterns\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^snippets/$', views.SnippetList.as_view()),\n    url(r'^snippets/(?P<pk>[0-9]+)/$', views.SnippetDetail),\n]\nurlpatterns = format_suffix_patterns(urlpatterns)",
			"file": "apii/urls.py",
			"file_size": 1022,
			"file_write_time": 131353241206908853,
			"settings":
			{
				"buffer_size": 1014,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apii/settings.py",
			"settings":
			{
				"buffer_size": 3150,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "snipetss/admin.py",
			"settings":
			{
				"buffer_size": 307,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/humraz/apii",
		"/home/humraz/apii/apii",
		"/home/humraz/apii/snipetss",
		"/home/humraz/apii/snipetss/migrations"
	],
	"file_history":
	[
		"/home/humraz/apii/snipetss/apps.py",
		"/home/humraz/apii/apii/settings.py",
		"/home/humraz/trydjango18/src/templates/home.html",
		"/home/humraz/trydjango18/src/newsletter/templates/home.html",
		"/home/humraz/trydjango18/src/trydjango18/settings.py",
		"/home/humraz/fff.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "snipetss/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 433,
						"regions":
						{
						},
						"selection":
						[
							[
								433,
								433
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "snipetss/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2041,
						"regions":
						{
						},
						"selection":
						[
							[
								1107,
								1107
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "snipetss/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 203,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"auto_name": "from rest_framework import serializers",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "apii/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1014,
						"regions":
						{
						},
						"selection":
						[
							[
								960,
								960
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "apii/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3150,
						"regions":
						{
						},
						"selection":
						[
							[
								834,
								834
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "snipetss/admin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 307,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "api.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
